# Basic Types
E -> N
E -> B
E -> S

# Math operations
E -> E PLUS E
E -> E MINUS E
E -> E STAR E

# Bool operations
E -> BOOLOP
BOOLOP -> E DEQ E
BOOLOP -> IF E THEN E ELSE E

# String operations
E -> STROP
STROP -> LENGTH LPAR S RPAR
STROP -> INDEX LPAR E COMMA E RPAR

# Pair operations
E -> PAIROP
PAIROP -> LPAR E COMMA E RPAR
PAIROP -> FST E
PAIROP -> SND E

# Function application
E -> S FUNCAPP
FUNCAPP -> LPAR E FUNCAPP
FUNCAPP -> COMMA E FUNCAPP
FUNCAPP -> RPAR

# Expressions can be surrounded by parantheses
E -> LPAR E RPAR

# Lambdas
E -> LAMBDA X PERIOD E

# Let expressions
E -> LETPART IN E
LETPART -> LETTYPE LETEXPR EQ E
LETTYPE -> LET
LETTYPE -> LET RECF S
LETTYPE -> LET LPAR E COMMA E RPAR
LETTYPE -> LET FUN S
LETEXPR -> LPAR S COLON TYPE RPAR COLON TYPE
LETEXPR -> LPAR S COLON TYPE RPAR
LETEXPR -> LPAR S COMMA S RPAR
LETEXPR -> E

# Type Rules
TYPE -> "bool"
TYPE -> "int"
TYPE -> "str"
TYPE -> TYPE ARROW TYPE
TYPE -> TYPE STAR TYPE
TYPE -> LPAR TYPE RPAR

# Let Terminals
LET -> "let"
FUN -> "fun"

# Boolean Terminals
B -> "true" | "false"

# Language Keywords
LENGTH -> "length"
INDEX -> "index"
IN -> "in"
FST -> "fst"
SND -> "snd"
LAMBDA -> "\"
RECF -> "rec"
PLUS -> "+"
MINUS -> "-"
STAR -> "*"
DEQ -> "=="
LPAR -> "("
RPAR -> ")"
COMMA -> ","
EQ -> "="
COLON -> ":"
PERIOD -> "."
ARROW -> "->"
IF -> "if"
THEN -> "then"
ELSE -> "else"